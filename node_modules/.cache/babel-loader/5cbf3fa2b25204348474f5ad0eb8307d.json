{"ast":null,"code":"import { rgba } from '../rgba/rgba.js';\nimport { themeColor } from '../theme-color/theme-color.js';\nimport { primaryShade } from '../primary-shade/primary-shade.js';\nimport { gradient } from '../gradient/gradient.js';\n\nfunction getColorIndexInfo(color, theme) {\n  if (typeof color === \"string\" && color.includes(\".\")) {\n    const [splittedColor, _splittedShade] = color.split(\".\");\n    const splittedShade = parseInt(_splittedShade, 10);\n\n    if (splittedColor in theme.colors && splittedShade >= 0 && splittedShade < 10) {\n      return {\n        isSplittedColor: true,\n        key: splittedColor,\n        shade: splittedShade\n      };\n    }\n  }\n\n  return {\n    isSplittedColor: false\n  };\n}\n\nfunction variant(theme) {\n  const getThemeColor = themeColor(theme);\n  const getPrimaryShade = primaryShade(theme);\n  const getGradient = gradient(theme);\n  return _ref => {\n    let {\n      variant: variant2,\n      color,\n      gradient: gradient2,\n      primaryFallback\n    } = _ref;\n    const colorInfo = getColorIndexInfo(color, theme);\n\n    if (variant2 === \"light\") {\n      return {\n        border: \"transparent\",\n        background: rgba(getThemeColor(color, theme.colorScheme === \"dark\" ? 8 : 0, primaryFallback, false), theme.colorScheme === \"dark\" ? 0.2 : 1),\n        color: color === \"dark\" ? theme.colorScheme === \"dark\" ? theme.colors.dark[0] : theme.colors.dark[9] : getThemeColor(color, theme.colorScheme === \"dark\" ? 2 : getPrimaryShade(\"light\")),\n        hover: rgba(getThemeColor(color, theme.colorScheme === \"dark\" ? 7 : 1, primaryFallback, false), theme.colorScheme === \"dark\" ? 0.25 : 0.65)\n      };\n    }\n\n    if (variant2 === \"default\") {\n      return {\n        border: theme.colorScheme === \"dark\" ? theme.colors.dark[4] : theme.colors.gray[4],\n        background: theme.colorScheme === \"dark\" ? theme.colors.dark[6] : theme.white,\n        color: theme.colorScheme === \"dark\" ? theme.white : theme.black,\n        hover: theme.colorScheme === \"dark\" ? theme.colors.dark[5] : theme.colors.gray[0]\n      };\n    }\n\n    if (variant2 === \"white\") {\n      return {\n        border: \"transparent\",\n        background: theme.white,\n        color: getThemeColor(color, getPrimaryShade()),\n        hover: null\n      };\n    }\n\n    if (variant2 === \"outline\") {\n      return {\n        border: getThemeColor(color, theme.colorScheme === \"dark\" ? 5 : getPrimaryShade(\"light\")),\n        background: \"transparent\",\n        color: getThemeColor(color, theme.colorScheme === \"dark\" ? 5 : getPrimaryShade(\"light\")),\n        hover: theme.colorScheme === \"dark\" ? rgba(getThemeColor(color, 5, primaryFallback, false), 0.05) : rgba(getThemeColor(color, 0, primaryFallback, false), 0.35)\n      };\n    }\n\n    if (variant2 === \"gradient\") {\n      return {\n        background: getGradient(gradient2),\n        color: theme.white,\n        border: \"transparent\",\n        hover: null\n      };\n    }\n\n    if (variant2 === \"subtle\") {\n      return {\n        border: \"transparent\",\n        background: \"transparent\",\n        color: color === \"dark\" ? theme.colorScheme === \"dark\" ? theme.colors.dark[0] : theme.colors.dark[9] : getThemeColor(color, theme.colorScheme === \"dark\" ? 2 : getPrimaryShade(\"light\")),\n        hover: rgba(getThemeColor(color, theme.colorScheme === \"dark\" ? 8 : 0, primaryFallback, false), theme.colorScheme === \"dark\" ? 0.2 : 1)\n      };\n    }\n\n    const _primaryShade = getPrimaryShade();\n\n    const _shade = colorInfo.isSplittedColor ? colorInfo.shade : _primaryShade;\n\n    const _color = colorInfo.isSplittedColor ? colorInfo.key : color;\n\n    return {\n      border: \"transparent\",\n      background: getThemeColor(_color, _shade, primaryFallback),\n      color: theme.white,\n      hover: getThemeColor(_color, _shade === 9 ? 8 : _shade + 1)\n    };\n  };\n}\n\nexport { variant };","map":{"version":3,"mappings":"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","names":["getColorIndexInfo","color","theme","includes","splittedColor","_splittedShade","split","splittedShade","parseInt","colors","isSplittedColor","key","shade","variant","getThemeColor","themeColor","getPrimaryShade","primaryShade","getGradient","gradient","variant2","gradient2","primaryFallback","colorInfo","border","background","rgba","colorScheme","dark","hover","gray","white","black","_primaryShade","_shade","_color"],"sources":["/home/filipe-smart/www/Estudos/rd_station/node_modules/@mantine/styles/src/theme/functions/fns/variant/variant.ts"],"sourcesContent":["import type { MantineColor, MantineGradient, MantineThemeBase } from '../../../types';\nimport { rgba } from '../rgba/rgba';\nimport { themeColor } from '../theme-color/theme-color';\nimport { primaryShade } from '../primary-shade/primary-shade';\nimport { gradient } from '../gradient/gradient';\n\nexport interface VariantInput {\n  variant: 'filled' | 'light' | 'outline' | 'default' | 'gradient' | 'white' | 'subtle';\n  color?: MantineColor;\n  gradient?: MantineGradient;\n  primaryFallback?: boolean;\n}\n\nexport interface VariantOutput {\n  border: string;\n  background: string;\n  color: string;\n  hover: string;\n}\n\ninterface ColorInfo {\n  isSplittedColor: boolean;\n  key?: string;\n  shade?: number;\n}\n\nfunction getColorIndexInfo(color: string, theme: MantineThemeBase): ColorInfo {\n  if (typeof color === 'string' && color.includes('.')) {\n    const [splittedColor, _splittedShade] = color.split('.');\n    const splittedShade = parseInt(_splittedShade, 10);\n\n    if (splittedColor in theme.colors && splittedShade >= 0 && splittedShade < 10) {\n      return { isSplittedColor: true, key: splittedColor, shade: splittedShade };\n    }\n  }\n\n  return { isSplittedColor: false };\n}\n\nexport function variant(theme: MantineThemeBase) {\n  const getThemeColor = themeColor(theme);\n  const getPrimaryShade = primaryShade(theme);\n  const getGradient = gradient(theme);\n\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  return ({ variant, color, gradient, primaryFallback }: VariantInput): VariantOutput => {\n    const colorInfo = getColorIndexInfo(color, theme);\n\n    if (variant === 'light') {\n      return {\n        border: 'transparent',\n        background: rgba(\n          getThemeColor(color, theme.colorScheme === 'dark' ? 8 : 0, primaryFallback, false),\n          theme.colorScheme === 'dark' ? 0.2 : 1\n        ),\n        color:\n          color === 'dark'\n            ? theme.colorScheme === 'dark'\n              ? theme.colors.dark[0]\n              : theme.colors.dark[9]\n            : getThemeColor(color, theme.colorScheme === 'dark' ? 2 : getPrimaryShade('light')),\n        hover: rgba(\n          getThemeColor(color, theme.colorScheme === 'dark' ? 7 : 1, primaryFallback, false),\n          theme.colorScheme === 'dark' ? 0.25 : 0.65\n        ),\n      };\n    }\n\n    if (variant === 'default') {\n      return {\n        border: theme.colorScheme === 'dark' ? theme.colors.dark[4] : theme.colors.gray[4],\n        background: theme.colorScheme === 'dark' ? theme.colors.dark[6] : theme.white,\n        color: theme.colorScheme === 'dark' ? theme.white : theme.black,\n        hover: theme.colorScheme === 'dark' ? theme.colors.dark[5] : theme.colors.gray[0],\n      };\n    }\n\n    if (variant === 'white') {\n      return {\n        border: 'transparent',\n        background: theme.white,\n        color: getThemeColor(color, getPrimaryShade()),\n        hover: null,\n      };\n    }\n\n    if (variant === 'outline') {\n      return {\n        border: getThemeColor(color, theme.colorScheme === 'dark' ? 5 : getPrimaryShade('light')),\n        background: 'transparent',\n        color: getThemeColor(color, theme.colorScheme === 'dark' ? 5 : getPrimaryShade('light')),\n        hover:\n          theme.colorScheme === 'dark'\n            ? rgba(getThemeColor(color, 5, primaryFallback, false), 0.05)\n            : rgba(getThemeColor(color, 0, primaryFallback, false), 0.35),\n      };\n    }\n\n    if (variant === 'gradient') {\n      return {\n        background: getGradient(gradient),\n        color: theme.white,\n        border: 'transparent',\n        hover: null,\n      };\n    }\n\n    if (variant === 'subtle') {\n      return {\n        border: 'transparent',\n        background: 'transparent',\n        color:\n          color === 'dark'\n            ? theme.colorScheme === 'dark'\n              ? theme.colors.dark[0]\n              : theme.colors.dark[9]\n            : getThemeColor(color, theme.colorScheme === 'dark' ? 2 : getPrimaryShade('light')),\n        hover: rgba(\n          getThemeColor(color, theme.colorScheme === 'dark' ? 8 : 0, primaryFallback, false),\n          theme.colorScheme === 'dark' ? 0.2 : 1\n        ),\n      };\n    }\n\n    const _primaryShade = getPrimaryShade();\n    const _shade = colorInfo.isSplittedColor ? colorInfo.shade : _primaryShade;\n    const _color = colorInfo.isSplittedColor ? colorInfo.key : color;\n\n    return {\n      border: 'transparent',\n      background: getThemeColor(_color, _shade, primaryFallback),\n      color: theme.white,\n      hover: getThemeColor(_color, _shade === 9 ? 8 : _shade + 1),\n    };\n  };\n}\n"]},"metadata":{},"sourceType":"module"}