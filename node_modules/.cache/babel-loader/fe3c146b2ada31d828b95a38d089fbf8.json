{"ast":null,"code":"import React, { forwardRef, useState, useRef, useEffect } from 'react';\nimport { useScrollIntoView, useUncontrolled, useDidUpdate, useMergedRef } from '@mantine/hooks';\nimport { getDefaultZIndex } from '@mantine/styles';\nimport { groupOptions } from '@mantine/utils';\nimport { SelectScrollArea } from './SelectScrollArea/SelectScrollArea.js';\nimport { DefaultItem } from './DefaultItem/DefaultItem.js';\nimport { getSelectRightSectionProps } from './SelectRightSection/get-select-right-section-props.js';\nimport { SelectItems } from './SelectItems/SelectItems.js';\nimport { SelectPopover } from './SelectPopover/SelectPopover.js';\nimport { filterData } from './filter-data/filter-data.js';\nimport useStyles from './Select.styles.js';\nimport { useInputProps } from '../Input/use-input-props.js';\nimport { Input } from '../Input/Input.js';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nfunction defaultFilter(value, item) {\n  return item.label.toLowerCase().trim().includes(value.toLowerCase().trim());\n}\n\nfunction defaultShouldCreate(query, data) {\n  return !!query && !data.some(item => item.label.toLowerCase() === query.toLowerCase());\n}\n\nconst defaultProps = {\n  required: false,\n  size: \"sm\",\n  shadow: \"sm\",\n  itemComponent: DefaultItem,\n  transition: \"fade\",\n  transitionDuration: 0,\n  initiallyOpened: false,\n  filter: defaultFilter,\n  maxDropdownHeight: 220,\n  searchable: false,\n  clearable: false,\n  limit: Infinity,\n  disabled: false,\n  creatable: false,\n  shouldCreate: defaultShouldCreate,\n  selectOnBlur: false,\n  switchDirectionOnFlip: false,\n  filterDataOnExactSearchMatch: false,\n  zIndex: getDefaultZIndex(\"popover\"),\n  clearButtonTabIndex: 0,\n  positionDependencies: [],\n  dropdownPosition: \"flip\"\n};\nconst Select = forwardRef((props, ref) => {\n  const _a = useInputProps(\"Select\", defaultProps, props),\n        {\n    inputProps,\n    wrapperProps,\n    shadow,\n    data,\n    value,\n    defaultValue,\n    onChange,\n    itemComponent,\n    onKeyDown,\n    onBlur,\n    onFocus,\n    transition,\n    transitionDuration,\n    initiallyOpened,\n    transitionTimingFunction,\n    unstyled,\n    classNames,\n    styles,\n    filter,\n    maxDropdownHeight,\n    searchable,\n    clearable,\n    nothingFound,\n    clearButtonLabel,\n    limit,\n    disabled,\n    onSearchChange,\n    rightSection,\n    rightSectionWidth,\n    creatable,\n    getCreateLabel,\n    shouldCreate,\n    selectOnBlur,\n    onCreate,\n    dropdownComponent,\n    onDropdownClose,\n    onDropdownOpen,\n    withinPortal,\n    switchDirectionOnFlip,\n    zIndex,\n    name,\n    dropdownPosition,\n    allowDeselect,\n    placeholder,\n    filterDataOnExactSearchMatch,\n    clearButtonTabIndex,\n    form,\n    positionDependencies,\n    readOnly\n  } = _a,\n        others = __objRest(_a, [\"inputProps\", \"wrapperProps\", \"shadow\", \"data\", \"value\", \"defaultValue\", \"onChange\", \"itemComponent\", \"onKeyDown\", \"onBlur\", \"onFocus\", \"transition\", \"transitionDuration\", \"initiallyOpened\", \"transitionTimingFunction\", \"unstyled\", \"classNames\", \"styles\", \"filter\", \"maxDropdownHeight\", \"searchable\", \"clearable\", \"nothingFound\", \"clearButtonLabel\", \"limit\", \"disabled\", \"onSearchChange\", \"rightSection\", \"rightSectionWidth\", \"creatable\", \"getCreateLabel\", \"shouldCreate\", \"selectOnBlur\", \"onCreate\", \"dropdownComponent\", \"onDropdownClose\", \"onDropdownOpen\", \"withinPortal\", \"switchDirectionOnFlip\", \"zIndex\", \"name\", \"dropdownPosition\", \"allowDeselect\", \"placeholder\", \"filterDataOnExactSearchMatch\", \"clearButtonTabIndex\", \"form\", \"positionDependencies\", \"readOnly\"]);\n\n  const {\n    classes,\n    cx,\n    theme\n  } = useStyles();\n  const [dropdownOpened, _setDropdownOpened] = useState(initiallyOpened);\n  const [hovered, setHovered] = useState(-1);\n  const inputRef = useRef();\n  const itemsRefs = useRef({});\n  const [direction, setDirection] = useState(\"column\");\n  const isColumn = direction === \"column\";\n  const {\n    scrollIntoView,\n    targetRef,\n    scrollableRef\n  } = useScrollIntoView({\n    duration: 0,\n    offset: 5,\n    cancelable: false,\n    isList: true\n  });\n  const isDeselectable = allowDeselect === void 0 ? clearable : allowDeselect;\n\n  const setDropdownOpened = opened => {\n    if (dropdownOpened !== opened) {\n      _setDropdownOpened(opened);\n\n      const handler = opened ? onDropdownOpen : onDropdownClose;\n      typeof handler === \"function\" && handler();\n    }\n  };\n\n  const isCreatable = creatable && typeof getCreateLabel === \"function\";\n  let createLabel = null;\n  const formattedData = data.map(item => typeof item === \"string\" ? {\n    label: item,\n    value: item\n  } : item);\n  const sortedData = groupOptions({\n    data: formattedData\n  });\n  const [_value, handleChange, controlled] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: null,\n    onChange\n  });\n  const selectedValue = sortedData.find(item => item.value === _value);\n  const [inputValue, setInputValue] = useState((selectedValue == null ? void 0 : selectedValue.label) || \"\");\n\n  const handleSearchChange = val => {\n    setInputValue(val);\n\n    if (searchable && typeof onSearchChange === \"function\") {\n      onSearchChange(val);\n    }\n  };\n\n  const handleClear = () => {\n    var _a2;\n\n    if (!readOnly) {\n      handleChange(null);\n\n      if (!controlled) {\n        handleSearchChange(\"\");\n      }\n\n      (_a2 = inputRef.current) == null ? void 0 : _a2.focus();\n    }\n  };\n\n  useEffect(() => {\n    const newSelectedValue = sortedData.find(item => item.value === _value);\n\n    if (newSelectedValue) {\n      handleSearchChange(newSelectedValue.label);\n    } else if (!isCreatable || !_value) {\n      handleSearchChange(\"\");\n    }\n  }, [_value]);\n  useEffect(() => {\n    if (selectedValue && (!searchable || !dropdownOpened)) {\n      handleSearchChange(selectedValue.label);\n    }\n  }, [selectedValue == null ? void 0 : selectedValue.label]);\n\n  const handleItemSelect = item => {\n    if (!readOnly) {\n      if (isDeselectable && (selectedValue == null ? void 0 : selectedValue.value) === item.value) {\n        handleChange(null);\n        setDropdownOpened(false);\n      } else {\n        if (item.creatable && typeof onCreate === \"function\") {\n          const createdItem = onCreate(item.value);\n\n          if (typeof createdItem === \"string\") {\n            handleChange(createdItem);\n          } else {\n            handleChange(createdItem.value);\n          }\n        } else {\n          handleChange(item.value);\n        }\n\n        if (!controlled) {\n          handleSearchChange(item.label);\n        }\n\n        setHovered(-1);\n        setDropdownOpened(false);\n        inputRef.current.focus();\n      }\n    }\n  };\n\n  const filteredData = filterData({\n    data: sortedData,\n    searchable,\n    limit,\n    searchValue: inputValue,\n    filter,\n    filterDataOnExactSearchMatch,\n    value: _value\n  });\n\n  if (isCreatable && shouldCreate(inputValue, filteredData)) {\n    createLabel = getCreateLabel(inputValue);\n    filteredData.push({\n      label: inputValue,\n      value: inputValue,\n      creatable: true\n    });\n  }\n\n  const getNextIndex = (index, nextItem, compareFn) => {\n    let i = index;\n\n    while (compareFn(i)) {\n      i = nextItem(i);\n      if (!filteredData[i].disabled) return i;\n    }\n\n    return index;\n  };\n\n  useDidUpdate(() => {\n    setHovered(-1);\n  }, [inputValue]);\n  const selectedItemIndex = _value ? filteredData.findIndex(el => el.value === _value) : 0;\n\n  const handlePrevious = () => {\n    setHovered(current => {\n      var _a2;\n\n      const nextIndex = getNextIndex(current, index => index - 1, index => index > 0);\n      targetRef.current = itemsRefs.current[(_a2 = filteredData[nextIndex]) == null ? void 0 : _a2.value];\n      scrollIntoView({\n        alignment: isColumn ? \"start\" : \"end\"\n      });\n      return nextIndex;\n    });\n  };\n\n  const handleNext = () => {\n    setHovered(current => {\n      var _a2;\n\n      const nextIndex = getNextIndex(current, index => index + 1, index => index < filteredData.length - 1);\n      targetRef.current = itemsRefs.current[(_a2 = filteredData[nextIndex]) == null ? void 0 : _a2.value];\n      scrollIntoView({\n        alignment: isColumn ? \"end\" : \"start\"\n      });\n      return nextIndex;\n    });\n  };\n\n  const scrollSelectedItemIntoView = () => window.setTimeout(() => {\n    var _a2;\n\n    targetRef.current = itemsRefs.current[(_a2 = filteredData[selectedItemIndex]) == null ? void 0 : _a2.value];\n    scrollIntoView({\n      alignment: isColumn ? \"end\" : \"start\"\n    });\n  }, 0);\n\n  const handleInputKeydown = event => {\n    typeof onKeyDown === \"function\" && onKeyDown(event);\n\n    switch (event.key) {\n      case \"ArrowUp\":\n        {\n          event.preventDefault();\n\n          if (!dropdownOpened) {\n            setHovered(selectedItemIndex);\n            setDropdownOpened(true);\n            scrollSelectedItemIntoView();\n          } else {\n            isColumn ? handlePrevious() : handleNext();\n          }\n\n          break;\n        }\n\n      case \"ArrowDown\":\n        {\n          event.preventDefault();\n\n          if (!dropdownOpened) {\n            setHovered(selectedItemIndex);\n            setDropdownOpened(true);\n            scrollSelectedItemIntoView();\n          } else {\n            isColumn ? handleNext() : handlePrevious();\n          }\n\n          break;\n        }\n\n      case \"Home\":\n        {\n          if (!searchable) {\n            event.preventDefault();\n\n            if (!dropdownOpened) {\n              setDropdownOpened(true);\n            }\n\n            const firstItemIndex = filteredData.findIndex(item => !item.disabled);\n            setHovered(firstItemIndex);\n            scrollIntoView({\n              alignment: isColumn ? \"end\" : \"start\"\n            });\n          }\n\n          break;\n        }\n\n      case \"End\":\n        {\n          if (!searchable) {\n            event.preventDefault();\n\n            if (!dropdownOpened) {\n              setDropdownOpened(true);\n            }\n\n            const lastItemIndex = filteredData.map(item => !!item.disabled).lastIndexOf(false);\n            setHovered(lastItemIndex);\n            scrollIntoView({\n              alignment: isColumn ? \"end\" : \"start\"\n            });\n          }\n\n          break;\n        }\n\n      case \"Escape\":\n        {\n          event.preventDefault();\n          setDropdownOpened(false);\n          setHovered(-1);\n          break;\n        }\n\n      case \" \":\n        {\n          if (!searchable) {\n            if (filteredData[hovered] && dropdownOpened) {\n              event.preventDefault();\n              handleItemSelect(filteredData[hovered]);\n            } else {\n              setDropdownOpened(true);\n              setHovered(selectedItemIndex);\n              scrollSelectedItemIntoView();\n            }\n          }\n\n          break;\n        }\n\n      case \"Enter\":\n        {\n          if (!searchable) {\n            event.preventDefault();\n          }\n\n          if (filteredData[hovered] && dropdownOpened) {\n            event.preventDefault();\n            handleItemSelect(filteredData[hovered]);\n          }\n        }\n    }\n  };\n\n  const handleInputBlur = event => {\n    typeof onBlur === \"function\" && onBlur(event);\n    const selected = sortedData.find(item => item.value === _value);\n\n    if (selectOnBlur && filteredData[hovered] && dropdownOpened) {\n      handleItemSelect(filteredData[hovered]);\n    }\n\n    handleSearchChange((selected == null ? void 0 : selected.label) || \"\");\n    setDropdownOpened(false);\n  };\n\n  const handleInputFocus = event => {\n    typeof onFocus === \"function\" && onFocus(event);\n\n    if (searchable) {\n      setDropdownOpened(true);\n      scrollSelectedItemIntoView();\n    }\n  };\n\n  const handleInputChange = event => {\n    if (!readOnly) {\n      handleSearchChange(event.currentTarget.value);\n\n      if (clearable && event.currentTarget.value === \"\") {\n        handleChange(null);\n      }\n\n      setHovered(-1);\n      setDropdownOpened(true);\n    }\n  };\n\n  const handleInputClick = () => {\n    if (!readOnly) {\n      let dropdownOpen = true;\n\n      if (!searchable) {\n        dropdownOpen = !dropdownOpened;\n      }\n\n      setDropdownOpened(dropdownOpen);\n\n      if (_value && dropdownOpen) {\n        setHovered(selectedItemIndex);\n        scrollSelectedItemIntoView();\n      }\n    }\n  };\n\n  const shouldShowDropdown = !readOnly && (filteredData.length > 0 ? dropdownOpened : dropdownOpened && !!nothingFound);\n  return /* @__PURE__ */React.createElement(Input.Wrapper, __spreadProps(__spreadValues({}, wrapperProps), {\n    __staticSelector: \"Select\"\n  }), /* @__PURE__ */React.createElement(SelectPopover, {\n    opened: shouldShowDropdown,\n    transition,\n    transitionDuration,\n    shadow: \"sm\",\n    withinPortal,\n    __staticSelector: \"Select\",\n    onDirectionChange: setDirection,\n    switchDirectionOnFlip,\n    zIndex,\n    dropdownPosition,\n    positionDependencies,\n    classNames,\n    styles,\n    unstyled\n  }, /* @__PURE__ */React.createElement(SelectPopover.Target, null, /* @__PURE__ */React.createElement(\"div\", {\n    role: \"combobox\",\n    \"aria-haspopup\": \"listbox\",\n    \"aria-owns\": shouldShowDropdown ? `${inputProps.id}-items` : null,\n    \"aria-controls\": inputProps.id,\n    \"aria-expanded\": shouldShowDropdown,\n    onMouseLeave: () => setHovered(-1),\n    tabIndex: -1\n  }, /* @__PURE__ */React.createElement(\"input\", {\n    type: \"hidden\",\n    name,\n    value: _value || \"\",\n    form,\n    disabled\n  }), /* @__PURE__ */React.createElement(Input, __spreadValues(__spreadProps(__spreadValues(__spreadValues({\n    autoComplete: \"off\",\n    type: \"search\"\n  }, inputProps), others), {\n    ref: useMergedRef(ref, inputRef),\n    onKeyDown: handleInputKeydown,\n    __staticSelector: \"Select\",\n    value: inputValue,\n    placeholder,\n    onChange: handleInputChange,\n    \"aria-autocomplete\": \"list\",\n    \"aria-controls\": shouldShowDropdown ? `${inputProps.id}-items` : null,\n    \"aria-activedescendant\": hovered >= 0 ? `${inputProps.id}-${hovered}` : null,\n    onClick: handleInputClick,\n    onBlur: handleInputBlur,\n    onFocus: handleInputFocus,\n    readOnly: !searchable || readOnly,\n    disabled,\n    \"data-mantine-stop-propagation\": shouldShowDropdown,\n    name: null,\n    classNames: __spreadProps(__spreadValues({}, classNames), {\n      input: cx({\n        [classes.input]: !searchable\n      }, classNames == null ? void 0 : classNames.input)\n    })\n  }), getSelectRightSectionProps({\n    theme,\n    rightSection,\n    rightSectionWidth,\n    styles,\n    size: inputProps.size,\n    shouldClear: clearable && !!selectedValue,\n    clearButtonLabel,\n    onClear: handleClear,\n    error: wrapperProps.error,\n    clearButtonTabIndex,\n    disabled,\n    readOnly\n  }))))), /* @__PURE__ */React.createElement(SelectPopover.Dropdown, {\n    component: dropdownComponent || SelectScrollArea,\n    maxHeight: maxDropdownHeight,\n    direction,\n    id: inputProps.id,\n    innerRef: scrollableRef\n  }, /* @__PURE__ */React.createElement(SelectItems, {\n    data: filteredData,\n    hovered,\n    classNames,\n    styles,\n    isItemSelected: val => val === _value,\n    uuid: inputProps.id,\n    __staticSelector: \"Select\",\n    onItemHover: setHovered,\n    onItemSelect: handleItemSelect,\n    itemsRefs,\n    itemComponent,\n    size: inputProps.size,\n    nothingFound,\n    creatable: isCreatable && !!createLabel,\n    createLabel,\n    \"aria-label\": wrapperProps.label,\n    unstyled\n  }))));\n});\nSelect.displayName = \"@mantine/core/Select\";\nexport { Select, defaultFilter, defaultShouldCreate };","map":{"version":3,"mappings":"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","names":["__defProp","Object","defineProperty","__defProps","defineProperties","__getOwnPropDescs","getOwnPropertyDescriptors","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__spreadProps","__objRest","source","exclude","target","indexOf","defaultFilter","item","label","toLowerCase","trim","includes","defaultShouldCreate","query","data","some","defaultProps","required","size","shadow","itemComponent","DefaultItem","transition","transitionDuration","initiallyOpened","filter","maxDropdownHeight","searchable","clearable","limit","Infinity","disabled","creatable","shouldCreate","selectOnBlur","switchDirectionOnFlip","filterDataOnExactSearchMatch","zIndex","getDefaultZIndex","clearButtonTabIndex","positionDependencies","dropdownPosition","Select","forwardRef","props","ref","_a","useInputProps","inputProps","wrapperProps","defaultValue","onChange","onKeyDown","onBlur","onFocus","transitionTimingFunction","unstyled","classNames","styles","nothingFound","clearButtonLabel","onSearchChange","rightSection","rightSectionWidth","getCreateLabel","onCreate","dropdownComponent","onDropdownClose","onDropdownOpen","withinPortal","name","allowDeselect","placeholder","form","readOnly","others","classes","cx","theme","useStyles","dropdownOpened","_setDropdownOpened","useState","hovered","setHovered","inputRef","useRef","itemsRefs","direction","setDirection","isColumn","scrollIntoView","targetRef","scrollableRef","useScrollIntoView","duration","offset","cancelable","isList","isDeselectable","setDropdownOpened","opened","handler","isCreatable","createLabel","formattedData","map","sortedData","groupOptions","_value","handleChange","controlled","useUncontrolled","finalValue","selectedValue","find","inputValue","setInputValue","handleSearchChange","val","handleClear","_a2","current","focus","useEffect","newSelectedValue","handleItemSelect","createdItem","filteredData","filterData","searchValue","push","getNextIndex","index","nextItem","compareFn","i","useDidUpdate","selectedItemIndex","findIndex","el","handlePrevious","nextIndex","alignment","handleNext","length","scrollSelectedItemIntoView","window","setTimeout","handleInputKeydown","event","preventDefault","firstItemIndex","lastItemIndex","lastIndexOf","handleInputBlur","selected","handleInputFocus","handleInputChange","currentTarget","handleInputClick","dropdownOpen","shouldShowDropdown","React","createElement","Input","Wrapper","__staticSelector","SelectPopover","onDirectionChange","Target","role","id","onMouseLeave","tabIndex","type","autoComplete","useMergedRef","onClick","input","getSelectRightSectionProps","shouldClear","onClear","error","Dropdown","component","SelectScrollArea","maxHeight","innerRef","SelectItems","isItemSelected","uuid","onItemHover","onItemSelect","displayName"],"sources":["/home/filipe-smart/www/Estudos/rd_station/node_modules/@mantine/core/src/Select/Select.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, forwardRef } from 'react';\nimport { useUncontrolled, useMergedRef, useDidUpdate, useScrollIntoView } from '@mantine/hooks';\nimport { DefaultProps, MantineSize, MantineShadow, getDefaultZIndex } from '@mantine/styles';\nimport { groupOptions } from '@mantine/utils';\nimport { SelectScrollArea } from './SelectScrollArea/SelectScrollArea';\nimport { Input, useInputProps } from '../Input';\nimport { MantineTransition } from '../Transition';\nimport { DefaultItem } from './DefaultItem/DefaultItem';\nimport { getSelectRightSectionProps } from './SelectRightSection/get-select-right-section-props';\nimport { SelectItems } from './SelectItems/SelectItems';\nimport { SelectPopover } from './SelectPopover/SelectPopover';\nimport { SelectItem, BaseSelectStylesNames, BaseSelectProps } from './types';\nimport { filterData } from './filter-data/filter-data';\nimport useStyles from './Select.styles';\n\nexport interface SelectSharedProps<Item, Value> {\n  /** Select data used to renderer items in dropdown */\n  data: (string | Item)[];\n\n  /** Controlled input value */\n  value?: Value;\n\n  /** Uncontrolled input defaultValue */\n  defaultValue?: Value;\n\n  /** Controlled input onChange handler */\n  onChange?(value: Value): void;\n\n  /** Function based on which items in dropdown are filtered */\n  filter?(value: string, item: Item): boolean;\n\n  /** Input size */\n  size?: MantineSize;\n\n  /** Dropdown body appear/disappear transition */\n  transition?: MantineTransition;\n\n  /** Dropdown body transition duration */\n  transitionDuration?: number;\n\n  /** Dropdown body transition timing function, defaults to theme.transitionTimingFunction */\n  transitionTimingFunction?: string;\n\n  /** Dropdown shadow from theme or any value to set box-shadow */\n  shadow?: MantineShadow;\n\n  /** Initial dropdown opened state */\n  initiallyOpened?: boolean;\n\n  /** Change item renderer */\n  itemComponent?: React.FC<any>;\n\n  /** Called when dropdown is opened */\n  onDropdownOpen?(): void;\n\n  /** Called when dropdown is closed */\n  onDropdownClose?(): void;\n\n  /** Whether to render the dropdown in a Portal */\n  withinPortal?: boolean;\n\n  /** Limit amount of items displayed at a time for searchable select */\n  limit?: number;\n\n  /** Nothing found label */\n  nothingFound?: React.ReactNode;\n\n  /** Dropdown z-index */\n  zIndex?: React.CSSProperties['zIndex'];\n\n  /** Dropdown positioning behavior */\n  dropdownPosition?: 'bottom' | 'top' | 'flip';\n\n  /** Whether to switch item order and keyboard navigation on dropdown position flip */\n  switchDirectionOnFlip?: boolean;\n\n  /** useEffect dependencies to force update dropdown position */\n  positionDependencies?: any[];\n}\n\nexport interface SelectProps\n  extends DefaultProps<BaseSelectStylesNames>,\n    BaseSelectProps,\n    SelectSharedProps<SelectItem, string | null> {\n  /** Maximum dropdown height in px */\n  maxDropdownHeight?: number;\n\n  /** Set to true to enable search */\n  searchable?: boolean;\n\n  /** Allow to clear item */\n  clearable?: boolean;\n\n  /** aria-label for clear button */\n  clearButtonLabel?: string;\n\n  /** Called each time search value changes */\n  onSearchChange?(query: string): void;\n\n  /** Allow creatable option  */\n  creatable?: boolean;\n\n  /** Function to get create Label */\n  getCreateLabel?(query: string): React.ReactNode;\n\n  /** Function to determine if create label should be displayed */\n  shouldCreate?(query: string, data: SelectItem[]): boolean;\n\n  /** Called when create option is selected */\n  onCreate?(query: string): SelectItem | string;\n\n  /** Change dropdown component, can be used to add native scrollbars */\n  dropdownComponent?: any;\n\n  /** Select highlighted item on blur */\n  selectOnBlur?: boolean;\n\n  /** Allow deselecting items on click */\n  allowDeselect?: boolean;\n\n  /** Should data be filtered when search value exactly matches selected item */\n  filterDataOnExactSearchMatch?: boolean;\n\n  /** Set the clear button tab index to disabled or default after input field */\n  clearButtonTabIndex?: -1 | 0;\n}\n\nexport function defaultFilter(value: string, item: SelectItem) {\n  return item.label.toLowerCase().trim().includes(value.toLowerCase().trim());\n}\n\nexport function defaultShouldCreate(query: string, data: SelectItem[]) {\n  return !!query && !data.some((item) => item.label.toLowerCase() === query.toLowerCase());\n}\n\nconst defaultProps: Partial<SelectProps> = {\n  required: false,\n  size: 'sm',\n  shadow: 'sm',\n  itemComponent: DefaultItem,\n  transition: 'fade',\n  transitionDuration: 0,\n  initiallyOpened: false,\n  filter: defaultFilter,\n  maxDropdownHeight: 220,\n  searchable: false,\n  clearable: false,\n  limit: Infinity,\n  disabled: false,\n  creatable: false,\n  shouldCreate: defaultShouldCreate,\n  selectOnBlur: false,\n  switchDirectionOnFlip: false,\n  filterDataOnExactSearchMatch: false,\n  zIndex: getDefaultZIndex('popover'),\n  clearButtonTabIndex: 0,\n  positionDependencies: [],\n  dropdownPosition: 'flip',\n};\n\nexport const Select = forwardRef<HTMLInputElement, SelectProps>((props, ref) => {\n  const {\n    inputProps,\n    wrapperProps,\n    shadow,\n    data,\n    value,\n    defaultValue,\n    onChange,\n    itemComponent,\n    onKeyDown,\n    onBlur,\n    onFocus,\n    transition,\n    transitionDuration,\n    initiallyOpened,\n    transitionTimingFunction,\n    unstyled,\n    classNames,\n    styles,\n    filter,\n    maxDropdownHeight,\n    searchable,\n    clearable,\n    nothingFound,\n    clearButtonLabel,\n    limit,\n    disabled,\n    onSearchChange,\n    rightSection,\n    rightSectionWidth,\n    creatable,\n    getCreateLabel,\n    shouldCreate,\n    selectOnBlur,\n    onCreate,\n    dropdownComponent,\n    onDropdownClose,\n    onDropdownOpen,\n    withinPortal,\n    switchDirectionOnFlip,\n    zIndex,\n    name,\n    dropdownPosition,\n    allowDeselect,\n    placeholder,\n    filterDataOnExactSearchMatch,\n    clearButtonTabIndex,\n    form,\n    positionDependencies,\n    readOnly,\n    ...others\n  } = useInputProps('Select', defaultProps, props);\n\n  const { classes, cx, theme } = useStyles();\n  const [dropdownOpened, _setDropdownOpened] = useState(initiallyOpened);\n  const [hovered, setHovered] = useState(-1);\n  const inputRef = useRef<HTMLInputElement>();\n  const itemsRefs = useRef<Record<string, HTMLDivElement>>({});\n  const [direction, setDirection] = useState<React.CSSProperties['flexDirection']>('column');\n  const isColumn = direction === 'column';\n  const { scrollIntoView, targetRef, scrollableRef } = useScrollIntoView({\n    duration: 0,\n    offset: 5,\n    cancelable: false,\n    isList: true,\n  });\n\n  const isDeselectable = allowDeselect === undefined ? clearable : allowDeselect;\n\n  const setDropdownOpened = (opened: boolean) => {\n    if (dropdownOpened !== opened) {\n      _setDropdownOpened(opened);\n      const handler = opened ? onDropdownOpen : onDropdownClose;\n      typeof handler === 'function' && handler();\n    }\n  };\n\n  const isCreatable = creatable && typeof getCreateLabel === 'function';\n  let createLabel = null;\n\n  const formattedData = data.map((item) =>\n    typeof item === 'string' ? { label: item, value: item } : item\n  );\n\n  const sortedData = groupOptions({ data: formattedData });\n\n  const [_value, handleChange, controlled] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: null,\n    onChange,\n  });\n\n  const selectedValue = sortedData.find((item) => item.value === _value);\n  const [inputValue, setInputValue] = useState(selectedValue?.label || '');\n\n  const handleSearchChange = (val: string) => {\n    setInputValue(val);\n    if (searchable && typeof onSearchChange === 'function') {\n      onSearchChange(val);\n    }\n  };\n\n  const handleClear = () => {\n    if (!readOnly) {\n      handleChange(null);\n      if (!controlled) {\n        handleSearchChange('');\n      }\n      inputRef.current?.focus();\n    }\n  };\n\n  useEffect(() => {\n    const newSelectedValue = sortedData.find((item) => item.value === _value);\n\n    if (newSelectedValue) {\n      handleSearchChange(newSelectedValue.label);\n    } else if (!isCreatable || !_value) {\n      handleSearchChange('');\n    }\n  }, [_value]);\n\n  useEffect(() => {\n    if (selectedValue && (!searchable || !dropdownOpened)) {\n      handleSearchChange(selectedValue.label);\n    }\n  }, [selectedValue?.label]);\n\n  const handleItemSelect = (item: SelectItem) => {\n    if (!readOnly) {\n      if (isDeselectable && selectedValue?.value === item.value) {\n        handleChange(null);\n        setDropdownOpened(false);\n      } else {\n        if (item.creatable && typeof onCreate === 'function') {\n          const createdItem = onCreate(item.value);\n          if (typeof createdItem === 'string') {\n            handleChange(createdItem);\n          } else {\n            handleChange(createdItem.value);\n          }\n        } else {\n          handleChange(item.value);\n        }\n\n        if (!controlled) {\n          handleSearchChange(item.label);\n        }\n\n        setHovered(-1);\n        setDropdownOpened(false);\n        inputRef.current.focus();\n      }\n    }\n  };\n\n  const filteredData = filterData({\n    data: sortedData,\n    searchable,\n    limit,\n    searchValue: inputValue,\n    filter,\n    filterDataOnExactSearchMatch,\n    value: _value,\n  });\n\n  if (isCreatable && shouldCreate(inputValue, filteredData)) {\n    createLabel = getCreateLabel(inputValue);\n    filteredData.push({ label: inputValue, value: inputValue, creatable: true });\n  }\n\n  const getNextIndex = (\n    index: number,\n    nextItem: (index: number) => number,\n    compareFn: (index: number) => boolean\n  ) => {\n    let i = index;\n    while (compareFn(i)) {\n      i = nextItem(i);\n      if (!filteredData[i].disabled) return i;\n    }\n    return index;\n  };\n\n  useDidUpdate(() => {\n    setHovered(-1);\n  }, [inputValue]);\n\n  const selectedItemIndex = _value ? filteredData.findIndex((el) => el.value === _value) : 0;\n\n  const handlePrevious = () => {\n    setHovered((current) => {\n      const nextIndex = getNextIndex(\n        current,\n        (index) => index - 1,\n        (index) => index > 0\n      );\n\n      targetRef.current = itemsRefs.current[filteredData[nextIndex]?.value];\n      scrollIntoView({ alignment: isColumn ? 'start' : 'end' });\n      return nextIndex;\n    });\n  };\n\n  const handleNext = () => {\n    setHovered((current) => {\n      const nextIndex = getNextIndex(\n        current,\n        (index) => index + 1,\n        (index) => index < filteredData.length - 1\n      );\n\n      targetRef.current = itemsRefs.current[filteredData[nextIndex]?.value];\n      scrollIntoView({ alignment: isColumn ? 'end' : 'start' });\n      return nextIndex;\n    });\n  };\n\n  const scrollSelectedItemIntoView = () =>\n    window.setTimeout(() => {\n      targetRef.current = itemsRefs.current[filteredData[selectedItemIndex]?.value];\n      scrollIntoView({ alignment: isColumn ? 'end' : 'start' });\n    }, 0);\n\n  const handleInputKeydown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    typeof onKeyDown === 'function' && onKeyDown(event);\n\n    switch (event.key) {\n      case 'ArrowUp': {\n        event.preventDefault();\n\n        if (!dropdownOpened) {\n          setHovered(selectedItemIndex);\n          setDropdownOpened(true);\n          scrollSelectedItemIntoView();\n        } else {\n          isColumn ? handlePrevious() : handleNext();\n        }\n\n        break;\n      }\n\n      case 'ArrowDown': {\n        event.preventDefault();\n\n        if (!dropdownOpened) {\n          setHovered(selectedItemIndex);\n          setDropdownOpened(true);\n          scrollSelectedItemIntoView();\n        } else {\n          isColumn ? handleNext() : handlePrevious();\n        }\n\n        break;\n      }\n\n      case 'Home': {\n        if (!searchable) {\n          event.preventDefault();\n\n          if (!dropdownOpened) {\n            setDropdownOpened(true);\n          }\n\n          const firstItemIndex = filteredData.findIndex((item) => !item.disabled);\n          setHovered(firstItemIndex);\n          scrollIntoView({ alignment: isColumn ? 'end' : 'start' });\n        }\n        break;\n      }\n\n      case 'End': {\n        if (!searchable) {\n          event.preventDefault();\n\n          if (!dropdownOpened) {\n            setDropdownOpened(true);\n          }\n\n          const lastItemIndex = filteredData.map((item) => !!item.disabled).lastIndexOf(false);\n          setHovered(lastItemIndex);\n          scrollIntoView({ alignment: isColumn ? 'end' : 'start' });\n        }\n        break;\n      }\n\n      case 'Escape': {\n        event.preventDefault();\n        setDropdownOpened(false);\n        setHovered(-1);\n        break;\n      }\n\n      case ' ': {\n        if (!searchable) {\n          if (filteredData[hovered] && dropdownOpened) {\n            event.preventDefault();\n            handleItemSelect(filteredData[hovered]);\n          } else {\n            setDropdownOpened(true);\n            setHovered(selectedItemIndex);\n            scrollSelectedItemIntoView();\n          }\n        }\n\n        break;\n      }\n\n      case 'Enter': {\n        if (!searchable) {\n          event.preventDefault();\n        }\n\n        if (filteredData[hovered] && dropdownOpened) {\n          event.preventDefault();\n          handleItemSelect(filteredData[hovered]);\n        }\n      }\n    }\n  };\n\n  const handleInputBlur = (event: React.FocusEvent<HTMLInputElement>) => {\n    typeof onBlur === 'function' && onBlur(event);\n    const selected = sortedData.find((item) => item.value === _value);\n    if (selectOnBlur && filteredData[hovered] && dropdownOpened) {\n      handleItemSelect(filteredData[hovered]);\n    }\n    handleSearchChange(selected?.label || '');\n    setDropdownOpened(false);\n  };\n\n  const handleInputFocus = (event: React.FocusEvent<HTMLInputElement>) => {\n    typeof onFocus === 'function' && onFocus(event);\n    if (searchable) {\n      setDropdownOpened(true);\n      scrollSelectedItemIntoView();\n    }\n  };\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (!readOnly) {\n      handleSearchChange(event.currentTarget.value);\n\n      if (clearable && event.currentTarget.value === '') {\n        handleChange(null);\n      }\n\n      setHovered(-1);\n      setDropdownOpened(true);\n    }\n  };\n\n  const handleInputClick = () => {\n    if (!readOnly) {\n      let dropdownOpen = true;\n\n      if (!searchable) {\n        dropdownOpen = !dropdownOpened;\n      }\n\n      setDropdownOpened(dropdownOpen);\n\n      if (_value && dropdownOpen) {\n        setHovered(selectedItemIndex);\n        scrollSelectedItemIntoView();\n      }\n    }\n  };\n\n  const shouldShowDropdown =\n    !readOnly && (filteredData.length > 0 ? dropdownOpened : dropdownOpened && !!nothingFound);\n\n  return (\n    <Input.Wrapper {...wrapperProps} __staticSelector=\"Select\">\n      <SelectPopover\n        opened={shouldShowDropdown}\n        transition={transition}\n        transitionDuration={transitionDuration}\n        shadow=\"sm\"\n        withinPortal={withinPortal}\n        __staticSelector=\"Select\"\n        onDirectionChange={setDirection}\n        switchDirectionOnFlip={switchDirectionOnFlip}\n        zIndex={zIndex}\n        dropdownPosition={dropdownPosition}\n        positionDependencies={positionDependencies}\n        classNames={classNames}\n        styles={styles}\n        unstyled={unstyled}\n      >\n        <SelectPopover.Target>\n          <div\n            role=\"combobox\"\n            aria-haspopup=\"listbox\"\n            aria-owns={shouldShowDropdown ? `${inputProps.id}-items` : null}\n            aria-controls={inputProps.id}\n            aria-expanded={shouldShowDropdown}\n            onMouseLeave={() => setHovered(-1)}\n            tabIndex={-1}\n          >\n            <input type=\"hidden\" name={name} value={_value || ''} form={form} disabled={disabled} />\n\n            <Input<'input'>\n              autoComplete=\"off\"\n              type=\"search\"\n              {...inputProps}\n              {...others}\n              ref={useMergedRef(ref, inputRef)}\n              onKeyDown={handleInputKeydown}\n              __staticSelector=\"Select\"\n              value={inputValue}\n              placeholder={placeholder}\n              onChange={handleInputChange}\n              aria-autocomplete=\"list\"\n              aria-controls={shouldShowDropdown ? `${inputProps.id}-items` : null}\n              aria-activedescendant={hovered >= 0 ? `${inputProps.id}-${hovered}` : null}\n              onClick={handleInputClick}\n              onBlur={handleInputBlur}\n              onFocus={handleInputFocus}\n              readOnly={!searchable || readOnly}\n              disabled={disabled}\n              data-mantine-stop-propagation={shouldShowDropdown}\n              name={null}\n              classNames={{\n                ...classNames,\n                input: cx({ [classes.input]: !searchable }, (classNames as any)?.input),\n              }}\n              {...getSelectRightSectionProps({\n                theme,\n                rightSection,\n                rightSectionWidth,\n                styles,\n                size: inputProps.size,\n                shouldClear: clearable && !!selectedValue,\n                clearButtonLabel,\n                onClear: handleClear,\n                error: wrapperProps.error,\n                clearButtonTabIndex,\n                disabled,\n                readOnly,\n              })}\n            />\n          </div>\n        </SelectPopover.Target>\n\n        <SelectPopover.Dropdown\n          component={dropdownComponent || SelectScrollArea}\n          maxHeight={maxDropdownHeight}\n          direction={direction}\n          id={inputProps.id}\n          innerRef={scrollableRef}\n        >\n          <SelectItems\n            data={filteredData}\n            hovered={hovered}\n            classNames={classNames}\n            styles={styles}\n            isItemSelected={(val) => val === _value}\n            uuid={inputProps.id}\n            __staticSelector=\"Select\"\n            onItemHover={setHovered}\n            onItemSelect={handleItemSelect}\n            itemsRefs={itemsRefs}\n            itemComponent={itemComponent}\n            size={inputProps.size}\n            nothingFound={nothingFound}\n            creatable={isCreatable && !!createLabel}\n            createLabel={createLabel}\n            aria-label={wrapperProps.label}\n            unstyled={unstyled}\n          />\n        </SelectPopover.Dropdown>\n      </SelectPopover>\n    </Input.Wrapper>\n  );\n});\n\nSelect.displayName = '@mantine/core/Select';\n"]},"metadata":{},"sourceType":"module"}